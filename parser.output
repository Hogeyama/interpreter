   0  $accept : %entry% $end

   1  toplevel : expr SEMISEMI
   2           | declare SEMISEMI

   3  declare : LET let_declare
   4          | LET REC let_rec_declare
   5          | LET let_declare declare
   6          | LET REC let_rec_declare declare

   7  let_declare : var args0 EQ expr
   8              | var args0 EQ expr AND let_declare

   9  let_rec_declare : var var args0 EQ expr
  10                  | var var args0 EQ expr AND let_rec_declare

  11  expr : LET var args0 EQ expr IN expr
  12       | LET REC var var args0 EQ expr IN expr
  13       | IF expr THEN expr ELSE expr
  14       | FUN args1 ARROW expr
  15       | arith_expr EQ arith_expr
  16       | arith_expr LT arith_expr
  17       | MATCH expr WITH cases
  18       | MATCH expr WITH BAR cases
  19       | list_expr

  20  cases : pattern ARROW expr
  21        | pattern ARROW expr BAR cases

  22  pattern : atomic_pattern CONS pattern
  23          | atomic_pattern

  24  atomic_pattern : INT
  25                 | BOOL
  26                 | var
  27                 | LPAR pattern COMMA pattern RPAR
  28                 | LBRACKET RBRACKET
  29                 | LPAR pattern RPAR

  30  list_expr : arith_expr CONS list_expr
  31            | arith_expr

  32  arith_expr : arith_expr PLUS factor_expr
  33             | arith_expr MINUS factor_expr
  34             | factor_expr

  35  factor_expr : factor_expr TIMES app_expr
  36              | factor_expr DIV app_expr
  37              | app_expr

  38  app_expr : app_expr atomic_expr
  39           | atomic_expr

  40  atomic_expr : INT
  41              | BOOL
  42              | LPAR expr COMMA expr RPAR
  43              | LBRACKET RBRACKET
  44              | ID
  45              | LPAR expr RPAR

  46  var : ID

  47  args0 :
  48        | args1

  49  args1 : var args0

  50  %entry% : '\001' toplevel

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . toplevel  (50)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 6
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	toplevel  goto 12
	expr  goto 13
	declare  goto 14
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	atomic_expr : INT .  (40)

	.  reduce 40


state 4
	atomic_expr : BOOL .  (41)

	.  reduce 41


state 5
	atomic_expr : ID .  (44)

	.  reduce 44


state 6
	declare : LET . let_declare  (3)
	declare : LET . REC let_rec_declare  (4)
	declare : LET . let_declare declare  (5)
	declare : LET . REC let_rec_declare declare  (6)
	expr : LET . var args0 EQ expr IN expr  (11)
	expr : LET . REC var var args0 EQ expr IN expr  (12)

	ID  shift 20
	REC  shift 21
	.  error

	let_declare  goto 22
	var  goto 23


state 7
	expr : IF . expr THEN expr ELSE expr  (13)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 25
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 8
	atomic_expr : LPAR . expr COMMA expr RPAR  (42)
	atomic_expr : LPAR . expr RPAR  (45)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 26
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 9
	expr : FUN . args1 ARROW expr  (14)

	ID  shift 20
	.  error

	var  goto 27
	args1  goto 28


state 10
	atomic_expr : LBRACKET . RBRACKET  (43)

	RBRACKET  shift 29
	.  error


state 11
	expr : MATCH . expr WITH cases  (17)
	expr : MATCH . expr WITH BAR cases  (18)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 30
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 12
	%entry% : '\001' toplevel .  (50)

	.  reduce 50


state 13
	toplevel : expr . SEMISEMI  (1)

	SEMISEMI  shift 31
	.  error


state 14
	toplevel : declare . SEMISEMI  (2)

	SEMISEMI  shift 32
	.  error


state 15
	expr : arith_expr . EQ arith_expr  (15)
	expr : arith_expr . LT arith_expr  (16)
	list_expr : arith_expr . CONS list_expr  (30)
	list_expr : arith_expr .  (31)
	arith_expr : arith_expr . PLUS factor_expr  (32)
	arith_expr : arith_expr . MINUS factor_expr  (33)

	PLUS  shift 33
	MINUS  shift 34
	EQ  shift 35
	LT  shift 36
	CONS  shift 37
	LET  reduce 31
	IN  reduce 31
	AND  reduce 31
	THEN  reduce 31
	ELSE  reduce 31
	RPAR  reduce 31
	COMMA  reduce 31
	WITH  reduce 31
	BAR  reduce 31
	SEMISEMI  reduce 31


state 16
	expr : list_expr .  (19)

	.  reduce 19


state 17
	arith_expr : factor_expr .  (34)
	factor_expr : factor_expr . TIMES app_expr  (35)
	factor_expr : factor_expr . DIV app_expr  (36)

	TIMES  shift 38
	DIV  shift 39
	LET  reduce 34
	IN  reduce 34
	AND  reduce 34
	PLUS  reduce 34
	MINUS  reduce 34
	EQ  reduce 34
	LT  reduce 34
	THEN  reduce 34
	ELSE  reduce 34
	RPAR  reduce 34
	CONS  reduce 34
	COMMA  reduce 34
	WITH  reduce 34
	BAR  reduce 34
	SEMISEMI  reduce 34


state 18
	factor_expr : app_expr .  (37)
	app_expr : app_expr . atomic_expr  (38)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	LET  reduce 37
	IN  reduce 37
	AND  reduce 37
	PLUS  reduce 37
	TIMES  reduce 37
	MINUS  reduce 37
	DIV  reduce 37
	EQ  reduce 37
	LT  reduce 37
	THEN  reduce 37
	ELSE  reduce 37
	RPAR  reduce 37
	CONS  reduce 37
	COMMA  reduce 37
	WITH  reduce 37
	BAR  reduce 37
	SEMISEMI  reduce 37

	atomic_expr  goto 40


state 19
	app_expr : atomic_expr .  (39)

	.  reduce 39


state 20
	var : ID .  (46)

	.  reduce 46


state 21
	declare : LET REC . let_rec_declare  (4)
	declare : LET REC . let_rec_declare declare  (6)
	expr : LET REC . var var args0 EQ expr IN expr  (12)

	ID  shift 20
	.  error

	let_rec_declare  goto 41
	var  goto 42


state 22
	declare : LET let_declare .  (3)
	declare : LET let_declare . declare  (5)

	LET  shift 43
	SEMISEMI  reduce 3

	declare  goto 44


state 23
	let_declare : var . args0 EQ expr  (7)
	let_declare : var . args0 EQ expr AND let_declare  (8)
	expr : LET var . args0 EQ expr IN expr  (11)
	args0 : .  (47)

	ID  shift 20
	EQ  reduce 47

	var  goto 27
	args0  goto 45
	args1  goto 46


state 24
	expr : LET . var args0 EQ expr IN expr  (11)
	expr : LET . REC var var args0 EQ expr IN expr  (12)

	ID  shift 20
	REC  shift 47
	.  error

	var  goto 48


state 25
	expr : IF expr . THEN expr ELSE expr  (13)

	THEN  shift 49
	.  error


state 26
	atomic_expr : LPAR expr . COMMA expr RPAR  (42)
	atomic_expr : LPAR expr . RPAR  (45)

	RPAR  shift 50
	COMMA  shift 51
	.  error


state 27
	args1 : var . args0  (49)
	args0 : .  (47)

	ID  shift 20
	EQ  reduce 47
	ARROW  reduce 47

	var  goto 27
	args0  goto 52
	args1  goto 46


state 28
	expr : FUN args1 . ARROW expr  (14)

	ARROW  shift 53
	.  error


state 29
	atomic_expr : LBRACKET RBRACKET .  (43)

	.  reduce 43


state 30
	expr : MATCH expr . WITH cases  (17)
	expr : MATCH expr . WITH BAR cases  (18)

	WITH  shift 54
	.  error


state 31
	toplevel : expr SEMISEMI .  (1)

	.  reduce 1


state 32
	toplevel : declare SEMISEMI .  (2)

	.  reduce 2


state 33
	arith_expr : arith_expr PLUS . factor_expr  (32)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	.  error

	factor_expr  goto 55
	app_expr  goto 18
	atomic_expr  goto 19


state 34
	arith_expr : arith_expr MINUS . factor_expr  (33)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	.  error

	factor_expr  goto 56
	app_expr  goto 18
	atomic_expr  goto 19


state 35
	expr : arith_expr EQ . arith_expr  (15)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	.  error

	arith_expr  goto 57
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 36
	expr : arith_expr LT . arith_expr  (16)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	.  error

	arith_expr  goto 58
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 37
	list_expr : arith_expr CONS . list_expr  (30)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	.  error

	arith_expr  goto 59
	list_expr  goto 60
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 38
	factor_expr : factor_expr TIMES . app_expr  (35)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	.  error

	app_expr  goto 61
	atomic_expr  goto 19


state 39
	factor_expr : factor_expr DIV . app_expr  (36)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	.  error

	app_expr  goto 62
	atomic_expr  goto 19


state 40
	app_expr : app_expr atomic_expr .  (38)

	.  reduce 38


state 41
	declare : LET REC let_rec_declare .  (4)
	declare : LET REC let_rec_declare . declare  (6)

	LET  shift 43
	SEMISEMI  reduce 4

	declare  goto 63


state 42
	let_rec_declare : var . var args0 EQ expr  (9)
	let_rec_declare : var . var args0 EQ expr AND let_rec_declare  (10)
	expr : LET REC var . var args0 EQ expr IN expr  (12)

	ID  shift 20
	.  error

	var  goto 64


state 43
	declare : LET . let_declare  (3)
	declare : LET . REC let_rec_declare  (4)
	declare : LET . let_declare declare  (5)
	declare : LET . REC let_rec_declare declare  (6)

	ID  shift 20
	REC  shift 65
	.  error

	let_declare  goto 22
	var  goto 66


state 44
	declare : LET let_declare declare .  (5)

	.  reduce 5


state 45
	let_declare : var args0 . EQ expr  (7)
	let_declare : var args0 . EQ expr AND let_declare  (8)
	expr : LET var args0 . EQ expr IN expr  (11)

	EQ  shift 67
	.  error


state 46
	args0 : args1 .  (48)

	.  reduce 48


state 47
	expr : LET REC . var var args0 EQ expr IN expr  (12)

	ID  shift 20
	.  error

	var  goto 68


state 48
	expr : LET var . args0 EQ expr IN expr  (11)
	args0 : .  (47)

	ID  shift 20
	EQ  reduce 47

	var  goto 27
	args0  goto 69
	args1  goto 46


state 49
	expr : IF expr THEN . expr ELSE expr  (13)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 70
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 50
	atomic_expr : LPAR expr RPAR .  (45)

	.  reduce 45


state 51
	atomic_expr : LPAR expr COMMA . expr RPAR  (42)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 71
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 52
	args1 : var args0 .  (49)

	.  reduce 49


state 53
	expr : FUN args1 ARROW . expr  (14)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 72
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 54
	expr : MATCH expr WITH . cases  (17)
	expr : MATCH expr WITH . BAR cases  (18)

	INT  shift 73
	BOOL  shift 74
	ID  shift 20
	LPAR  shift 75
	LBRACKET  shift 76
	BAR  shift 77
	.  error

	var  goto 78
	cases  goto 79
	pattern  goto 80
	atomic_pattern  goto 81


state 55
	arith_expr : arith_expr PLUS factor_expr .  (32)
	factor_expr : factor_expr . TIMES app_expr  (35)
	factor_expr : factor_expr . DIV app_expr  (36)

	TIMES  shift 38
	DIV  shift 39
	LET  reduce 32
	IN  reduce 32
	AND  reduce 32
	PLUS  reduce 32
	MINUS  reduce 32
	EQ  reduce 32
	LT  reduce 32
	THEN  reduce 32
	ELSE  reduce 32
	RPAR  reduce 32
	CONS  reduce 32
	COMMA  reduce 32
	WITH  reduce 32
	BAR  reduce 32
	SEMISEMI  reduce 32


state 56
	arith_expr : arith_expr MINUS factor_expr .  (33)
	factor_expr : factor_expr . TIMES app_expr  (35)
	factor_expr : factor_expr . DIV app_expr  (36)

	TIMES  shift 38
	DIV  shift 39
	LET  reduce 33
	IN  reduce 33
	AND  reduce 33
	PLUS  reduce 33
	MINUS  reduce 33
	EQ  reduce 33
	LT  reduce 33
	THEN  reduce 33
	ELSE  reduce 33
	RPAR  reduce 33
	CONS  reduce 33
	COMMA  reduce 33
	WITH  reduce 33
	BAR  reduce 33
	SEMISEMI  reduce 33


state 57
	expr : arith_expr EQ arith_expr .  (15)
	arith_expr : arith_expr . PLUS factor_expr  (32)
	arith_expr : arith_expr . MINUS factor_expr  (33)

	PLUS  shift 33
	MINUS  shift 34
	LET  reduce 15
	IN  reduce 15
	AND  reduce 15
	THEN  reduce 15
	ELSE  reduce 15
	RPAR  reduce 15
	COMMA  reduce 15
	WITH  reduce 15
	BAR  reduce 15
	SEMISEMI  reduce 15


state 58
	expr : arith_expr LT arith_expr .  (16)
	arith_expr : arith_expr . PLUS factor_expr  (32)
	arith_expr : arith_expr . MINUS factor_expr  (33)

	PLUS  shift 33
	MINUS  shift 34
	LET  reduce 16
	IN  reduce 16
	AND  reduce 16
	THEN  reduce 16
	ELSE  reduce 16
	RPAR  reduce 16
	COMMA  reduce 16
	WITH  reduce 16
	BAR  reduce 16
	SEMISEMI  reduce 16


state 59
	list_expr : arith_expr . CONS list_expr  (30)
	list_expr : arith_expr .  (31)
	arith_expr : arith_expr . PLUS factor_expr  (32)
	arith_expr : arith_expr . MINUS factor_expr  (33)

	PLUS  shift 33
	MINUS  shift 34
	CONS  shift 37
	LET  reduce 31
	IN  reduce 31
	AND  reduce 31
	THEN  reduce 31
	ELSE  reduce 31
	RPAR  reduce 31
	COMMA  reduce 31
	WITH  reduce 31
	BAR  reduce 31
	SEMISEMI  reduce 31


state 60
	list_expr : arith_expr CONS list_expr .  (30)

	.  reduce 30


state 61
	factor_expr : factor_expr TIMES app_expr .  (35)
	app_expr : app_expr . atomic_expr  (38)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	LET  reduce 35
	IN  reduce 35
	AND  reduce 35
	PLUS  reduce 35
	TIMES  reduce 35
	MINUS  reduce 35
	DIV  reduce 35
	EQ  reduce 35
	LT  reduce 35
	THEN  reduce 35
	ELSE  reduce 35
	RPAR  reduce 35
	CONS  reduce 35
	COMMA  reduce 35
	WITH  reduce 35
	BAR  reduce 35
	SEMISEMI  reduce 35

	atomic_expr  goto 40


state 62
	factor_expr : factor_expr DIV app_expr .  (36)
	app_expr : app_expr . atomic_expr  (38)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LPAR  shift 8
	LBRACKET  shift 10
	LET  reduce 36
	IN  reduce 36
	AND  reduce 36
	PLUS  reduce 36
	TIMES  reduce 36
	MINUS  reduce 36
	DIV  reduce 36
	EQ  reduce 36
	LT  reduce 36
	THEN  reduce 36
	ELSE  reduce 36
	RPAR  reduce 36
	CONS  reduce 36
	COMMA  reduce 36
	WITH  reduce 36
	BAR  reduce 36
	SEMISEMI  reduce 36

	atomic_expr  goto 40


state 63
	declare : LET REC let_rec_declare declare .  (6)

	.  reduce 6


state 64
	let_rec_declare : var var . args0 EQ expr  (9)
	let_rec_declare : var var . args0 EQ expr AND let_rec_declare  (10)
	expr : LET REC var var . args0 EQ expr IN expr  (12)
	args0 : .  (47)

	ID  shift 20
	EQ  reduce 47

	var  goto 27
	args0  goto 82
	args1  goto 46


state 65
	declare : LET REC . let_rec_declare  (4)
	declare : LET REC . let_rec_declare declare  (6)

	ID  shift 20
	.  error

	let_rec_declare  goto 41
	var  goto 83


state 66
	let_declare : var . args0 EQ expr  (7)
	let_declare : var . args0 EQ expr AND let_declare  (8)
	args0 : .  (47)

	ID  shift 20
	EQ  reduce 47

	var  goto 27
	args0  goto 84
	args1  goto 46


state 67
	let_declare : var args0 EQ . expr  (7)
	let_declare : var args0 EQ . expr AND let_declare  (8)
	expr : LET var args0 EQ . expr IN expr  (11)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 85
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 68
	expr : LET REC var . var args0 EQ expr IN expr  (12)

	ID  shift 20
	.  error

	var  goto 86


state 69
	expr : LET var args0 . EQ expr IN expr  (11)

	EQ  shift 87
	.  error


state 70
	expr : IF expr THEN expr . ELSE expr  (13)

	ELSE  shift 88
	.  error


state 71
	atomic_expr : LPAR expr COMMA expr . RPAR  (42)

	RPAR  shift 89
	.  error


state 72
	expr : FUN args1 ARROW expr .  (14)

	.  reduce 14


state 73
	atomic_pattern : INT .  (24)

	.  reduce 24


state 74
	atomic_pattern : BOOL .  (25)

	.  reduce 25


state 75
	atomic_pattern : LPAR . pattern COMMA pattern RPAR  (27)
	atomic_pattern : LPAR . pattern RPAR  (29)

	INT  shift 73
	BOOL  shift 74
	ID  shift 20
	LPAR  shift 75
	LBRACKET  shift 76
	.  error

	var  goto 78
	pattern  goto 90
	atomic_pattern  goto 81


state 76
	atomic_pattern : LBRACKET . RBRACKET  (28)

	RBRACKET  shift 91
	.  error


state 77
	expr : MATCH expr WITH BAR . cases  (18)

	INT  shift 73
	BOOL  shift 74
	ID  shift 20
	LPAR  shift 75
	LBRACKET  shift 76
	.  error

	var  goto 78
	cases  goto 92
	pattern  goto 80
	atomic_pattern  goto 81


state 78
	atomic_pattern : var .  (26)

	.  reduce 26


state 79
	expr : MATCH expr WITH cases .  (17)

	.  reduce 17


state 80
	cases : pattern . ARROW expr  (20)
	cases : pattern . ARROW expr BAR cases  (21)

	ARROW  shift 93
	.  error


state 81
	pattern : atomic_pattern . CONS pattern  (22)
	pattern : atomic_pattern .  (23)

	CONS  shift 94
	RPAR  reduce 23
	ARROW  reduce 23
	COMMA  reduce 23


state 82
	let_rec_declare : var var args0 . EQ expr  (9)
	let_rec_declare : var var args0 . EQ expr AND let_rec_declare  (10)
	expr : LET REC var var args0 . EQ expr IN expr  (12)

	EQ  shift 95
	.  error


state 83
	let_rec_declare : var . var args0 EQ expr  (9)
	let_rec_declare : var . var args0 EQ expr AND let_rec_declare  (10)

	ID  shift 20
	.  error

	var  goto 96


state 84
	let_declare : var args0 . EQ expr  (7)
	let_declare : var args0 . EQ expr AND let_declare  (8)

	EQ  shift 97
	.  error


state 85
	let_declare : var args0 EQ expr .  (7)
	let_declare : var args0 EQ expr . AND let_declare  (8)
	expr : LET var args0 EQ expr . IN expr  (11)

	IN  shift 98
	AND  shift 99
	LET  reduce 7
	SEMISEMI  reduce 7


state 86
	expr : LET REC var var . args0 EQ expr IN expr  (12)
	args0 : .  (47)

	ID  shift 20
	EQ  reduce 47

	var  goto 27
	args0  goto 100
	args1  goto 46


state 87
	expr : LET var args0 EQ . expr IN expr  (11)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 101
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 88
	expr : IF expr THEN expr ELSE . expr  (13)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 102
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 89
	atomic_expr : LPAR expr COMMA expr RPAR .  (42)

	.  reduce 42


state 90
	atomic_pattern : LPAR pattern . COMMA pattern RPAR  (27)
	atomic_pattern : LPAR pattern . RPAR  (29)

	RPAR  shift 103
	COMMA  shift 104
	.  error


state 91
	atomic_pattern : LBRACKET RBRACKET .  (28)

	.  reduce 28


state 92
	expr : MATCH expr WITH BAR cases .  (18)

	.  reduce 18


state 93
	cases : pattern ARROW . expr  (20)
	cases : pattern ARROW . expr BAR cases  (21)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 105
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 94
	pattern : atomic_pattern CONS . pattern  (22)

	INT  shift 73
	BOOL  shift 74
	ID  shift 20
	LPAR  shift 75
	LBRACKET  shift 76
	.  error

	var  goto 78
	pattern  goto 106
	atomic_pattern  goto 81


state 95
	let_rec_declare : var var args0 EQ . expr  (9)
	let_rec_declare : var var args0 EQ . expr AND let_rec_declare  (10)
	expr : LET REC var var args0 EQ . expr IN expr  (12)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 107
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 96
	let_rec_declare : var var . args0 EQ expr  (9)
	let_rec_declare : var var . args0 EQ expr AND let_rec_declare  (10)
	args0 : .  (47)

	ID  shift 20
	EQ  reduce 47

	var  goto 27
	args0  goto 108
	args1  goto 46


state 97
	let_declare : var args0 EQ . expr  (7)
	let_declare : var args0 EQ . expr AND let_declare  (8)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 109
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 98
	expr : LET var args0 EQ expr IN . expr  (11)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 110
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 99
	let_declare : var args0 EQ expr AND . let_declare  (8)

	ID  shift 20
	.  error

	let_declare  goto 111
	var  goto 66


state 100
	expr : LET REC var var args0 . EQ expr IN expr  (12)

	EQ  shift 112
	.  error


state 101
	expr : LET var args0 EQ expr . IN expr  (11)

	IN  shift 98
	.  error


state 102
	expr : IF expr THEN expr ELSE expr .  (13)

	.  reduce 13


state 103
	atomic_pattern : LPAR pattern RPAR .  (29)

	.  reduce 29


state 104
	atomic_pattern : LPAR pattern COMMA . pattern RPAR  (27)

	INT  shift 73
	BOOL  shift 74
	ID  shift 20
	LPAR  shift 75
	LBRACKET  shift 76
	.  error

	var  goto 78
	pattern  goto 113
	atomic_pattern  goto 81


105: shift/reduce conflict (shift 114, reduce 20) on BAR
state 105
	cases : pattern ARROW expr .  (20)
	cases : pattern ARROW expr . BAR cases  (21)

	BAR  shift 114
	LET  reduce 20
	IN  reduce 20
	AND  reduce 20
	THEN  reduce 20
	ELSE  reduce 20
	RPAR  reduce 20
	COMMA  reduce 20
	WITH  reduce 20
	SEMISEMI  reduce 20


state 106
	pattern : atomic_pattern CONS pattern .  (22)

	.  reduce 22


state 107
	let_rec_declare : var var args0 EQ expr .  (9)
	let_rec_declare : var var args0 EQ expr . AND let_rec_declare  (10)
	expr : LET REC var var args0 EQ expr . IN expr  (12)

	IN  shift 115
	AND  shift 116
	LET  reduce 9
	SEMISEMI  reduce 9


state 108
	let_rec_declare : var var args0 . EQ expr  (9)
	let_rec_declare : var var args0 . EQ expr AND let_rec_declare  (10)

	EQ  shift 117
	.  error


state 109
	let_declare : var args0 EQ expr .  (7)
	let_declare : var args0 EQ expr . AND let_declare  (8)

	AND  shift 99
	LET  reduce 7
	SEMISEMI  reduce 7


state 110
	expr : LET var args0 EQ expr IN expr .  (11)

	.  reduce 11


state 111
	let_declare : var args0 EQ expr AND let_declare .  (8)

	.  reduce 8


state 112
	expr : LET REC var var args0 EQ . expr IN expr  (12)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 118
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 113
	atomic_pattern : LPAR pattern COMMA pattern . RPAR  (27)

	RPAR  shift 119
	.  error


state 114
	cases : pattern ARROW expr BAR . cases  (21)

	INT  shift 73
	BOOL  shift 74
	ID  shift 20
	LPAR  shift 75
	LBRACKET  shift 76
	.  error

	var  goto 78
	cases  goto 120
	pattern  goto 80
	atomic_pattern  goto 81


state 115
	expr : LET REC var var args0 EQ expr IN . expr  (12)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 121
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 116
	let_rec_declare : var var args0 EQ expr AND . let_rec_declare  (10)

	ID  shift 20
	.  error

	let_rec_declare  goto 122
	var  goto 83


state 117
	let_rec_declare : var var args0 EQ . expr  (9)
	let_rec_declare : var var args0 EQ . expr AND let_rec_declare  (10)

	INT  shift 3
	BOOL  shift 4
	ID  shift 5
	LET  shift 24
	IF  shift 7
	LPAR  shift 8
	FUN  shift 9
	LBRACKET  shift 10
	MATCH  shift 11
	.  error

	expr  goto 123
	arith_expr  goto 15
	list_expr  goto 16
	factor_expr  goto 17
	app_expr  goto 18
	atomic_expr  goto 19


state 118
	expr : LET REC var var args0 EQ expr . IN expr  (12)

	IN  shift 115
	.  error


state 119
	atomic_pattern : LPAR pattern COMMA pattern RPAR .  (27)

	.  reduce 27


state 120
	cases : pattern ARROW expr BAR cases .  (21)

	.  reduce 21


state 121
	expr : LET REC var var args0 EQ expr IN expr .  (12)

	.  reduce 12


state 122
	let_rec_declare : var var args0 EQ expr AND let_rec_declare .  (10)

	.  reduce 10


state 123
	let_rec_declare : var var args0 EQ expr .  (9)
	let_rec_declare : var var args0 EQ expr . AND let_rec_declare  (10)

	AND  shift 116
	LET  reduce 9
	SEMISEMI  reduce 9


State 105 contains 1 shift/reduce conflict.


31 terminals, 18 nonterminals
51 grammar rules, 124 states
